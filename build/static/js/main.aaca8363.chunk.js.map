{"version":3,"sources":["controlers/user/user.ts","views/popups/types.ts","views/popups/message/Message.tsx","views/pages/Login/Login.tsx","style/Theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["validate","require","compile","type","properties","username","minLength","password","required","additionalProperties","handleLogin","ev","a","preventDefault","console","log","target","elements","value","Error","errors","dataPath","message","axios","post","data","error","handleSecret","get","handleLogout","ERROR","App","props","classes","background","button","buttonText","createClasses","className","Login","Box","onSubmit","component","sx","m","width","TextField","id","label","variant","name","Button","onClick","href","theme","createTheme","status","danger","blue","components","MuiButton","styleOverrides","root","fontSize","color","backgroundColor","orange","borderRadius","ThemeProvider","to","path","Ready","Fail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaca8363.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst Ajv = require(\"ajv\")\r\nconst ajv = new Ajv() // options can be passed, e.g. {allErrors: true}\r\n\r\nconst schema = {\r\n  type: \"object\",\r\n  properties: {\r\n    username: { type: \"string\", minLength: 2 },\r\n    password: { type: \"string\", minLength: 6 },\r\n  },\r\n  required: [\"username\", \"password\"],\r\n  additionalProperties: false\r\n}\r\n\r\nconst validate = ajv.compile(schema)\r\n\r\n\r\nexport async function handleLogin(ev: any) {\r\n  try {\r\n    ev.preventDefault();\r\n    console.log('test')\r\n    let { username, password } = ev.target.elements;\r\n    username = username.value;\r\n    password = password.value;\r\n\r\n    const valid = validate({ username, password })\r\n    if (!valid) throw new Error(`${validate.errors[0].dataPath} ${validate.errors[0].message}`);\r\n\r\n\r\n\r\n    console.log(username, password)\r\n    const { data } = await axios.post('/user/login', { username, password });\r\n\r\n    console.log(data)\r\n\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n\r\n}\r\n\r\nexport async function handleSecret() {\r\n  try {\r\n    const { data } = await axios.get('/user/get_secret');\r\n    console.log(data);\r\n\r\n\r\n  } catch (err) {\r\n    console.error(err);\r\n\r\n\r\n  }\r\n}\r\n\r\nexport async function handleLogout() {\r\n  try {\r\n    const { data } = await axios.get('/logout');\r\n    console.log(data);\r\n\r\n\r\n  } catch (err) {\r\n    console.error(err);\r\n\r\n\r\n  }\r\n}","export const ERROR:string = \"ERROR\";","import { ERROR } from '../types';\r\n\r\nexport interface IAppProps {\r\n    message: string;\r\n    type: string\r\n}\r\ninterface Classes{\r\n    button:string;\r\n    buttonText:string;\r\n    background:string\r\n}\r\n\r\nfunction createClasses(type: string): Classes{\r\n    switch (type) {\r\n        case ERROR:\r\n            return {background:'message--error', button: \"error\", buttonText:'OK' };\r\n        default: return {background:'', button: '',buttonText:'OK'}\r\n    }\r\n   \r\n}\r\n\r\nexport default function App(props: IAppProps) {\r\n    const classes = createClasses(props.type);\r\n\r\n    return (\r\n        <div className={`message ${classes.background}`}>\r\n            <h1>{props.message}</h1>\r\n            <button className={classes.button}>{classes.buttonText}</button>\r\n        </div>\r\n    );\r\n}\r\n","import React, { FC } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\n\r\n//functions\r\nimport { handleLogin, handleSecret } from '../../../controlers/user/user';\r\n\r\n//components\r\nimport Message from '../../popups/message/Message';\r\n\r\n//message types\r\nimport { ERROR } from '../../popups/types'\r\n\r\n\r\n\r\nconst Login: FC = () => {\r\n    return (\r\n        <div className=\"page\">\r\n            <Box onSubmit={handleLogin}\r\n                component=\"form\"\r\n                sx={{\r\n                    '& > :not(style)': { m: 1, width: '25ch' },\r\n                }}\r\n\r\n            >\r\n                <div className='form__inputs--flex'>\r\n                    < TextField id=\"standard-basic\" label=\"User name\" variant=\"standard\" type=\"text\" name='username' />\r\n                    < TextField id=\"standard-basic\" label=\"Password\" variant=\"standard\" type=\"text\" name='password' />\r\n                </div>\r\n                <Button variant=\"outlined\" type='submit'>Outlined</Button>\r\n\r\n                <Button variant=\"outlined\" onClick={handleSecret} >Get Secret</Button>\r\n\r\n                <Message type={ERROR} message='hi' />\r\n            </Box>\r\n            <a href=\"http://localhost:4000/auth\">Google</a>\r\n        </div>\r\n    );\r\n}\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n","import { createTheme } from '@mui/material/styles';\r\nimport { blue, orange } from '@mui/material/colors';\r\n\r\nexport { };\r\n\r\ndeclare module '@mui/material/styles' {\r\n  interface Theme {\r\n    status: {\r\n      danger: string;\r\n    };\r\n  }\r\n  // allow configuration using `createTheme`\r\n  interface ThemeOptions {\r\n    status?: {\r\n      danger?: string;\r\n    };\r\n  }\r\n}\r\n\r\nexport const theme = createTheme({\r\n  status: {\r\n    danger: blue[500],\r\n  },\r\n  components: {\r\n    // Name of the component\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        // Name of the slot\r\n        root: {\r\n          // Some CSS\r\n          fontSize: '2rem',\r\n          color:'#ffffff',\r\n          backgroundColor: orange[500],\r\n          '&:hover':{ \r\n            backgroundColor: orange[600],\r\n          },\r\n          borderRadius:'30px'\r\n          \r\n        },\r\n      },\r\n    },\r\n  },\r\n});","import React from 'react';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './style/App.scss';\r\n\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport Button from '@mui/material/Button';\r\nimport { handleSecret,handleLogout } from './controlers/user/user';\r\n\r\nimport Login from './views/pages/Login/Login';\r\n\r\nimport { theme } from './style/Theme';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/ready\">Ready</Link>\r\n              </li>\r\n\r\n            </ul>\r\n          </nav>\r\n\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/ready\">\r\n              <Ready />\r\n            </Route>\r\n            <Route path=\"/fail\">\r\n              <Fail />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\nfunction Ready() {\r\n  return (<div>\r\n    <h1>Ready</h1>\r\n    <Button onClick={handleSecret}>Get Secret</Button>\r\n    <Button onClick={handleLogout}>Logout</Button>\r\n  </div>)\r\n}\r\n\r\nfunction Fail() {\r\n  return (<h1>Fail</h1>)\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}